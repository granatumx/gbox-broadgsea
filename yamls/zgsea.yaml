id: BroadGSEA-{VER}

meta:
  title: Broad GSEA {VER}
  subtitle: The canonical Gene Set Enrichment Analysis
  description: |
    Gene Set Enrichment Analysis (GSEA) helps identify the biological
    functions related to a list of genes.

    [http://software.broadinstitute.org/gsea/index.jsp](http://software.broadinstitute.org/gsea/index.jsp)

endpoints:
  backend:
    cmd: python ./run_zgsea.py
    type: docker
    image: {GBOX}

frontend:
  args:
    - type: select
      label: The species
      choices:
        - label: Human
          value: human
        - label: Mouse
          description: genes are going to be mapped to their human homologs
          value: mouse
      default: human
      injectInto: species
    - type: select
      label: The database for the enrichement analysis
      choices:
        - label: Gene Ontology (GO)
          value: go
          description: >
            Gene Ontology (GO) term enrichment is a technique for interpreting
            sets of genes making use of the Gene Ontology system of
            classification, in which genes are assigned to a set of predefined
            bins depending on their functional characteristics. (From wikipedia)
        - label: Kyoto Encyclopedia of Genes and Genomes (KEGG)
          value: kegg
          description: >
            Kyoto Encyclopedia of Genes and Genomes (KEGG) is a collection of
            databases dealing with genomes, biological pathways, diseases,
            drugs, and chemical substances. (From wikipedia)
      default: go
      injectInto: gset_group_id
    - type: number
      label: Number of repeats for calculating p-values
      min: 0
      max: 1000000
      default: 1000
      injectInto: n_repeats
    - type: select
      label: Filter data
      choices:
        - label: Do not filter or alter scoring
          value: unaltered
          description: >
            Do not alter the scoring
        - label: Only take positively scored genes
          value: pos
          description: >
            If genes have a positive score (for example log FC or Z score), they are expressed more in the cluster.
        - label: Only take negatively scored genes, and rank lower scores higher
          value: neg
          description: >
            If genes have a negative score, they are expressed less in the cluster.
      default: unaltered
      injectInto: alterChoice
  imports:
    - kind: geneMeta
      label: A list of genes with their scores (usually output from scanpy scoring for example)
      injectInto: gene_scores
